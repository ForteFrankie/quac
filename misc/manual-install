#!/bin/bash

# Copyright (c) 2012-2013 Los Alamos National Security, LLC, and others.

# notes:
#
# - this installation method is a last resort
# - separate download and install scripts
# - required
#   - Environment MOdules (i.e., module command) http://modules.sourceforge.net/
#   - C, Fortran compilers, some other stuff that I don't quite know (it Works For Me (tm))
# - does not require root
# - will take a while to run
# - option argument is number of parallel build processes
# - installs in subdirectory
# - will put the *installed* version of quac on the path; you must override this if you want to develop elsewhere
# - no support for keeping dependencies up to date
# - does not always install auxiliary stuff like documentation

set -e

QUACBASE=$(cd $(dirname $0)/.. && pwd)
MYPREFIX=$QUACBASE/deps
MYSRC=$MYPREFIX/src
MAKEJ=${3:1}

module use --append $QUACBASE/misc
module load quac-module

mkdir -p $MYPREFIX
mkdir -p $MYSRC
cd $MYSRC

function make_ {
    make -j$MAKEJ "$@"
    make install
    make clean
    popd
}

function install_gdal {
    tar xzf gdal-*.tar.gz
    pushd gdal-*
    ./configure --with-static-proj4 --prefix=$MYPREFIX
    make_
}

function install_geos {
    tar xjf geos-*.tar.bz2
    pushd geos-*
    ./configure --enable-python --prefix=$MYPREFIX
    make_
}

function install_git {
    tar xzf git-*.tar.gz
    pushd git-*
    make configure
    ./configure --prefix=$MYPREFIX
    make_
}

function install_pip {
    tar xzf pip-*.tar.gz
    pushd pip-*
    python setup.py install
    popd
}

function install_proj {
    tar xzf proj-*.tar.gz
    pushd proj-*
    ./configure --without-jni --prefix=$MYPREFIX
    make_
}

function install_python {
    tar xjf Python-*.tar.bz2
    pushd Python-*
    ./configure --enable-shared --enable-unicode=ucs4 --prefix=$MYPREFIX
    make_ OPT=-O3
}

function install_setuptools {
    tar xzf setuptools-*.tar.gz
    pushd setuptools-*
    python setup.py install
    popd
}

function install_swig {
    tar xzf swig-*.tar.gz
    pushd swig-*
    ./configure --prefix=$MYPREFIX
    make_
}

echo '*** starting, please wait while the first package is untarred'

install_git
install_python
test $(python-config --prefix) = "$MYPREFIX" || (echo -n '*** wrong Python:' && python-config --prefix && false)
install_setuptools
install_pip
install_swig
install_gdal
install_geos
install_proj

# The order here embodies a DAG to satisfy dependencies.
pip install python-cliapp_*.tar.gz
pip install python-ttystatus_*.tar.gz
pip install cmdtest_*.tar.gz
pip install numpy-*.tar.gz
pip install scipy-*.tar.gz
pip install anyjson-*.tar.gz
pip install daemon-*.tar.gz
pip install Django-*.tar.gz
pip install GDAL-*.tar.gz
pip install isodate-*.tar.gz
pip install joblib-*.tar.gz
pip install six-*.tar.gz
pip install nose-*.tar.gz
pip install pyparsing-*.tar.gz
pip install python-dateutil-*.tar.gz
pip install tornado-*.tar.gz
pip install matplotlib-*.tar.gz
pip install httplib2-*.tar.gz
pip install oauth2-*.tar.gz
pip install psutil-*.tar.gz
pip install pyproj-*.tar.gz
pip install pytz-*.tar.bz2
pip install reidpr-tweetstream-reidpr-*.zip
pip install scikit-learn-*.tar.gz
pip install docutils-*.tar.gz
pip install MarkupSafe-*.tar.gz
pip install Jinja2-*.tar.gz
pip install Pygments-*.tar.gz
pip install Sphinx-*.tar.gz
pip install xlrd-*.tar.gz

# TinySegmenter just needs to be put in place
cp -v tinysegmenter.py ../lib/python2.7/site-packages

echo '*** done'
