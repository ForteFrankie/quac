#!/bin/bash

# Test that distributed make over ssh works.
#
# Copyright (c) 2012-2013 Los Alamos National Security, LLC, and others.

. ./environment.sh

cd $DATADIR
set -e
exec 2>&1

# Can we ssh to localhost without a password? That's a prerequisite for all
# the fancy stuff below...
y "sshrot echo a"
# Wait for socket to be cleaned up
sleep 1.5

echo '* SSH ControlMaster test:'
#
# 1. Set up two simultaneous ssh connections.
#
#    a. First one sets up a master control socket. This ssh stays open for one
#       second and the socket stays around for one second after the last
#       client closes.
sshrot 'echo b && sleep 1 && echo c' &
#    b. Second should attach to the existing socket; it stays up for 2
#       seconds. Sleep avoids race condition (see comments in sshrot).
sleep 0.1
sshrot 'echo b && sleep 2 && echo d' &
#    c. Wait a little for the output to appear.
sleep 0.3
# 2. Verify that two regular SSH processes and one mux process exists.
#
#    FIXME: This ps command does not work on Mac. I suspect a portable
#    alternative is possible, but I haven't figured it out yet.
ps -C ssh -o command | egrep -c 'ControlPath=\./sshsock\..* localhost'
ps -C ssh -o command | fgrep -c 'ssh: ./sshsock.localhost [mux]'
# 3. Verify that control socket exists.
ls $DATADIR | fgrep -c 'sshsock.localhost'
# 4. Verify that only one SSH TCP connection to localhost exists (we want 2
#    lines because it will be listed twice)
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$'
# 5. Wait until 1.5 seconds (the first ssh should be done)
y 'sleep 1.1'
# 6. Verify that one regular SSH process and one mux process still exist.
ps -C ssh -o command | egrep -c "ControlPath=\./sshsock\..* localhost"
ps -C ssh -o command | fgrep -c "ssh: ./sshsock.localhost [mux]"
# 7. Verify that control socket still exists.
ls $DATADIR | fgrep -c 'sshsock.localhost'
# 8. Verify that one SSH TCP connection still exists.
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$'
# 9. Wait until 2.5 seconds (both ssh should be done).
y 'sleep 1.0'
# 10. Wait until 3.5 seconds (control socked should be timed out).
y 'sleep 1.0'
# 10. Verify that SSH processes, control socket, and TCP connection are gone.
ps -C ssh -o command | egrep -c "ControlPath=\./sshsock\..* localhost" || true
ps -C ssh -o command | fgrep -c "ssh: ./sshsock.localhost [mux]" || true
ls $DATADIR | fgrep -c 'sshsock.localhost' || true
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$' || true


echo '* SSH scale test'
# Start several simultaneous connections
sshrot 'sleep 1 && echo e' &
sleep 0.1
for i in {2..10}; do
    sshrot 'sleep 1 && echo e' &
done
sleep 0.4
# Did multiplexing work?
ps -C ssh -o command | egrep -c 'ControlPath=\./sshsock\..* localhost'
ps -C ssh -o command | fgrep -c 'ssh: ./sshsock.localhost [mux]'
ls $DATADIR | fgrep -c 'sshsock.localhost'
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$'
# Wait for output
sleep 1.0
