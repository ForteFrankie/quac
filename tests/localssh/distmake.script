#!/bin/bash

# Test that distributed make over ssh works.
#
# Copyright (c) 2012-2013 Los Alamos National Security, LLC, and others.

. ./environment.sh

cd $DATADIR
set -e
exec 2>&1

# Can we ssh to localhost without a password? That's a prerequisite for all
# the fancy stuff below...
y "sshrot echo a"

# SSH multiplexing test
#
# 1. Set up two simultaneous ssh connections.
#
#    a. Set up multiplexing.
x sshrot --muxstart
#    b. Set up "real" connections.
y "sshrot 'echo b && sleep 1 && echo c' &"
y "sshrot 'echo b && sleep 2 && echo d' &"
#    c. Wait a little for the output to appear.
x sleep 0.3
# 2. Verify that two regular SSH processes and one mux process exist.
#
#    FIXME: This ps command does not work on Mac. I suspect a portable
#    alternative is possible, but I haven't figured it out yet.
ps -C ssh -o command | egrep -c -- '-S \./sshsock\..* localhost'
ps -C ssh -o command | fgrep -c 'ssh: ./sshsock.localhost [mux]'
# 3. Verify that control socket exists.
ls $DATADIR | fgrep -c 'sshsock.localhost'
# 4. Verify that only one SSH TCP connection to localhost exists (we want 2
#    lines because it will be listed twice)
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$'
# 5. Wait until 1.5 seconds (the first ssh should be done)
x sleep 1.2
# 6. Verify that one regular SSH process and one mux process still exist.
ps -C ssh -o command | egrep -c -- '-S \./sshsock\..* localhost'
ps -C ssh -o command | fgrep -c "ssh: ./sshsock.localhost [mux]"
# 7. Verify that control socket still exists.
ls $DATADIR | fgrep -c 'sshsock.localhost'
# 8. Verify that one SSH TCP connection still exists.
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$'
# 9. Wait until 2.5 seconds (both ssh should be done).
x sleep 1.0
# 10. Stop multiplexing.
x sshrot --muxstop
# 11. Verify that SSH processes, control socket, and TCP connection are gone.
ps -C ssh -o command | egrep -c -- '-S \./sshsock\..* localhost' || true
ps -C ssh -o command | fgrep -c "ssh: ./sshsock.localhost [mux]" || true
ls $DATADIR | fgrep -c 'sshsock.localhost' || true
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$' || true


# SSH scale test
#
# Start several simultaneous connections
x sshrot --muxstart
for i in {1..10}; do
    y "sshrot 'sleep 1 && echo e' &"
done
x sleep 0.5
# Did multiplexing work?
ps -C ssh -o command | egrep -c -- '-S \./sshsock\..* localhost'
ps -C ssh -o command | fgrep -c "ssh: ./sshsock.localhost [mux]" || true
ls $DATADIR | fgrep -c 'sshsock.localhost' || true
netstat | egrep -c 'localhost:ssh.+ESTABLISHED$' || true
# Wait for output
x sleep 1.0
# Done
x sshrot --muxstop

# Same working directory test
y 'pwd > pwd_local'
y 'sshrot pwd > pwd_sshrot'
y 'diff -u pwd_local pwd_sshrot'


# QUACreduce over ssh test
x sshrot --muxstart
echo -e 'foo bar baz\nfoo foo' > foo1.txt
echo -e 'bar' > foo2.txt
quacreduce --dist \
           --map 'tr "[:blank:]" "\n"' \
           --reduce 'uniq -c > out/%(RID)' \
           --partitions 3 \
           foo*.txt
x make -j3 --quiet
y 'cat out/* | sort'
x sshrot --muxstop
