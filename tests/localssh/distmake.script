#!/bin/bash

# Test that distributed make over ssh works.
#
# Copyright (c) 2012-2013 Los Alamos National Security, LLC, and others.

. ./environment.sh

cd $DATADIR
set -e
exec 2>&1

# Decide how to call netstat. The problem is that Red Hat and everyone else
# chose incompatible options for not truncating hostnames.
if (netstat --help 2>&1 | fgrep -q -- --wide); then
    WIDE=--wide
else
    WIDE=--notrim
fi

# Funtion to print, on four lines, the number of:
# 1. regular ssh processes to localhost
# 2. mux processes
# 3. control sockets
# 4. TCP connections
sshinfo () {
    # FIXME: This ps command does not work on Mac. I suspect a portable
    # alternative is possible, but I haven't figured it out yet.
    ps -C ssh -o command | egrep -c -- '-S \./sshsock\..* '$HOSTNAME || true
    ps -C ssh -o command | fgrep -c 'ssh: ./sshsock.'$HOSTNAME' [mux]' || true
    ls $DATADIR | fgrep -c 'sshsock.'$HOSTNAME || true
    netstat $WIDE | egrep -c 'localhost:.+'$HOSTNAME'.*:ssh +ESTABLISHED' || true
}

# Can we ssh to localhost without a password? That's a prerequisite for all
# the fancy stuff below...
y "sshrot echo a"

## SSH multiplexing test ##
#
# Set up two simultaneous ssh connections.
#
#    a. Set up multiplexing.
x sshrot --muxstart
#    b. Set up "real" connections.
y "sshrot 'echo b && sleep 1 && echo c' &"
y "sshrot 'echo b && sleep 2 && echo d' &"
#    c. Wait a little for the output to appear.
x sleep 0.3
# Verify that we have: two regular SSH processes, one mux process, a control
# socket, and one TCP connection.
sshinfo
# Wait until 1.5 seconds (the first ssh should be done)
x sleep 1.2
# Verify that we are down to one regular SSH process.
sshinfo
# Wait until 2.5 seconds (both ssh should be done).
x sleep 1.0
# Stop multiplexing.
x sshrot --muxstop
# Verify that SSH processes, control socket, and TCP connection are gone.
sshinfo

## SSH scale test ##
#
# Start several simultaneous connections
x sshrot --muxstart
for i in {1..10}; do
    y "sshrot 'sleep 1 && echo e' &"
done
x sleep 0.5
# Did multiplexing work?
sshinfo
# Wait for output
x sleep 1.0
# Done
x sshrot --muxstop

# Same working directory test
y 'pwd > pwd_local'
y 'sshrot pwd > pwd_sshrot'
y 'diff -u pwd_local pwd_sshrot'


# QUACreduce over ssh test
x sshrot --muxstart
echo -e 'foo bar baz\nfoo foo' > foo1.txt
echo -e 'bar' > foo2.txt
quacreduce --dist \
           --map 'tr "[:blank:]" "\n"' \
           --reduce 'uniq -c > out/%(RID)' \
           --partitions 3 \
           foo*.txt
x make -j3 --quiet
y 'cat out/* | sort'
x sshrot --muxstop
