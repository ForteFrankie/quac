#!/usr/bin/env python

# Copyright (c) 2012-2013 Los Alamos National Security, LLC, and others.

import errno
import os
import os.path
import sys

import quacpath
import u

hashmod = int(sys.argv[1])
tinymod = 8
tiny_sampled = set()

def mkdir(path):
   'http://stackoverflow.com/a/5032238/396038'
   try:
      os.makedirs(path)
   except OSError as x:
      if (x.errno != errno.EEXIST):
         raise

def symlink(target, source):
   'If a symlink at source already exists, blindly remove it.'
   if (os.path.islink(source)):
      os.unlink(source)
   os.symlink(target, source)

for h in xrange(hashmod):
   mkdir('hashed/%d' % (h))
   mkdir('hashed_small/%d' % (h))
   if (h % tinymod == 0):
      mkdir('hashed_tiny/%d' % (h))

for path in sys.argv[2:]:
   filename = os.path.basename(path)
   h = u.djb2(filename) % hashmod
   target = '../../%s' % (path)
   # main hash directory
   symlink(target, 'hashed/%d/%s' % (h, filename))
   # small sample - midnight to 1:00 am
   if (filename.find('-01') >= 0):
      symlink(target, 'hashed_small/%d/%s' % (h, filename))
   # tiny sample - one file per dir, only 1/tinymod dirs
   if (h % tinymod == 0 and h not in tiny_sampled):
      tiny_sampled.add(h)
      dir_ = 'hashed_tiny/%d' % (h)
      if (len(os.listdir(dir_)) == 0):
         # no previous run already put in the tiny sample file
         symlink(target, '%s/%s' % (dir_, filename))
